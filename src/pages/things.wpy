<style scoped="true" lang="less">
  .list {
    position: relative;
    box-sizing: border-box;
    top: 80rpx;
    padding-bottom: 95rpx;
    &.my {
      top: 0;
    }
  }
  .hidden {
    padding-bottom: 0rpx;
  }
  .empty {
    text-align: center;
    box-sizing: border-box;
    padding: 111rpx 0 0 0;
    image {
      display: block;
      margin: auto;
    }
    text {
      font-size: 24rpx;
      margin-top: 17rpx;
      color: #a59894;
      letter-spacing: 0.86px;
    }
    .gotorent {
      background: #ff7777;
      border-radius: 15rpx;
      width: 180rpx;
      height: 60rpx;
      font-size: 32rpx;
      line-height: 60rpx;
      vertical-align: middle;
      color: #ffffff;
      letter-spacing: 1.14rpx;
      text-align: center;
      margin: auto;
      margin-top: 18rpx;
    }
  }
  .floatbtn {
    background: #ffffff;
    box-shadow: 2rpx 4rpx 7rpx 0 rgba(0, 0, 0, 0.23);
    width: 90rpx;
    height: 90rpx;
    border-radius: 100%;
    position: fixed;
    z-index: 999;
    bottom: 128rpx;
    right: 68rpx;
    image {
      width: 90rpx;
      height: 90rpx;
    }
  }
  .searchbox {
    display: flex;
    width: 100%;
    height: 100rpx;
    box-sizing: border-box;
    flex-direction: row;
    align-items: center;
    justify-content: space-between;
    padding: 24rpx 32rpx 25rpx 30rpx;
    .container {
      transition: all 0.5s;
      transform-origin: left;
      display: flex;
      padding: 11rpx 0 12rpx 16rpx;
      box-sizing: border-box;
      flex-direction: row;
      align-items: center;
      justify-content: space-between;
      background: #ffffff;
      border-radius: 15rpx;
      width: 85%;
      height: 50rpx;
      margin: 0;
      &.open {
        width: 640rpx;
      }
      image {
        height: 28rpx;
        width: 28rpx;
        transform: scale(2);
      }
      input {
        width: 93%;
        height: 30rpx;
        font-size: 22rpx;
        color: #a9a29f;
        letter-spacing: 0.79rpx;
      }
    }
    .searchlabel {
      transition: all .5s;
      position: absolute;
      transform-origin: center;
      right: 12rpx;
      width: 15%;
      height: 31rpx;
      font-size: 24rpx;
      margin-left: 12rpx;
      color: #3e3835;
      letter-spacing: 1.33rpx;
      display: flex;
      margin-left: 33rpx;
      &.hide {
        opacity: 0;
        height: 0;
      }
      image {
        width: 25rpx;
        height: 33rpx;
        margin-left: 10rpx;
        transform: scale(2);
      }
    }
  }
  .searchPanel {
    transition: all .5s;
    height: 0rpx;
    width: 100%;
    overflow: hidden;
    box-sizing: border-box;
    background-color: #ffffff;
    padding-top: 0rpx;
    &.open {
      height: 750rpx;
      padding-top: 16rpx;
    }
    p {
      margin-left: 32rpx;
      margin-top: 16rpx;
      line-height: 30rpx;
      display: block;
      font-size: 24rpx;
      color: #a9a29f;
      letter-spacing: 0.86rpx;
    }
  }
  .listcontainer {
    width: 750rpx;
  }
  .filterbox {
    transition: all .5s;
    position: fixed;
    height: 100%;
    z-index: 1200;
    right: 0;
    top: 0;
    width: 663rpx;
    &.close {
      right: -100%;
    }
  }
</style>

<template>
  <scroll-view class="container list {{ifNoMargin ? 'my' : ''}}">
    <scroll-view class="listcontainer" hidden="{{tabIndexB != 0}}">
      <view class="mask"></view>
      <view class="filterbox {{showFilter ? 'open' : 'close'}}">
        <filter :ifShow.sync="showFilter"></filter>
      </view>
      <view class="searchbox {{inputState ? 'open' : ''}}">
        <view class="container {{inputState ? 'open' : ''}}">
          <image mode="aspectFit" src="../images/icons/search.svg" />
          <input bindfocus="openSearch" bindblur="closeSearch" @confirm="searchHandler" placeholder="搜索闲置物品"></input>
        </view>
        <view @tap="openFilter" class="searchlabel {{inputState ? 'hide' : ''}}">
          <view>筛选</view>
          <image src="../images/icons/fliter.svg" mode="aspectFit" />
        </view>
      </view>
      <view class="searchPanel {{inputState ? 'open' : ''}}">
        <p>热门搜索</p>
        <p>{{getHotItems}}</p>
      </view>
      <view hidden="{{thingsNotEmpty}}" class="empty">
        <image src="../images/icons/empty_pic.png" mode="aspectFit"></image>
        <text>还没有相关租品!</text>
        <navigator url="postrent" class="gotorent">去求租</navigator>
      </view>
      <repeat wx:for="{{getThingsList}}" wx:index="index" wx:item="item" wx:key="index">
        <listitem :thingsitem.sync="item" :indexa.sync="index"></listitem>
      </repeat>
    </scroll-view>
    <scroll-view class="listcontainer" hidden="{{tabIndexB != 1}}">
      <toptabsA :tabbar="topTabA"></toptabsA>
      <view hidden="{{rentNotEmpty}}" class="empty">
        <image src="../images/icons/empty_pic.png" mode="aspectFit"></image>
        <text>暂时没有东西哦(⊙o⊙)</text>
      </view>
      <repeat wx:for="{{getRentList}}" wx:index="index" wx:item="item" wx:key="index">
        <listitem :thingsitem.sync="item" :indexa.sync="index"></listitem>
      </repeat>
    </scroll-view>
    <scroll-view class="listcontainer" hidden="{{tabIndexB != 3}}">
      <toptabsB :tabbar="topTabB"></toptabsB>
      <circle :circleList.sync="circleList"></circle>
    </scroll-view>
    <scroll-view class="listcontainer" hidden="{{tabIndexB != 4}}">
      <myinfo :myInfo.sync="userInfo"></myinfo>
    </scroll-view>
    <bottomtabs></bottomtabs>
  </scroll-view>
</template>

<script>
  import wepy from 'wepy'
  import BottomTabs from '../components/bottomtabs'
  import TopTabs from '../components/toptabs'
  import ListItem from '../components/listitem'
  import Group from '../components/group'
  import My from '../components/my'
  import Filter from '../components/filter'
  import Circle from '../components/circle'
  const TITLEALLOWLENGTH = 15
  const DESALLOWLENGTH = 22
  export default class Things extends wepy.page {
    config = {
      navigationBarTitleText: '租品',
      enablePullDownRefresh: true
    }
    onShareAppMessage(res) {
      if (res.from === 'button') {
        // 来自页面内转发按钮
        console.log(res.target)
      }
      return {
        success: function(res) {
          let tickets = res.shareTickets
          console.log(tickets)
          // 转发成功
        },
        fail: function(res) {
          // 转发失败
        }
      }
    }
    onPullDownRefresh() {
      wx.showLoading({
        title: '加载中',
      })
      let self = this
      let filter = this.filter
      let bottomIndex = this.tabIndexB
      if (bottomIndex === 0) {
        self.renderHomeList(filter).then((res) => {
          wx.stopPullDownRefresh()
          wx.hideLoading()
        })
      } else if (bottomIndex === 1) {
        let label = this.tabIndexT + 1
        switch (label) {
          case 1:
            wx.reportAnalytics('rent_newset_pd', {})
            break
          case 2:
            wx.reportAnalytics('rent_closest_pd', {})
            break
          case 3:
            wx.reportAnalytics('rent_exp_pd', {})
            break
        }
        self.getRent(label, 1, 1).then((res) => {
          wx.stopPullDownRefresh()
          wx.hideLoading()
          self.rentlist.list = res.data
        })
      }
    }
    onReachBottom() {
      let index = this.tabIndexB
      let label = this.tabIndexT + 1
      let self = this
      if (index === 0) {
        wx.showLoading({
          title: '加载中'
        })
        let page = this.thingsPage + 1
        let category = this.filter.category
        self.getThings(label, category, page).then((res) => {
          wx.hideLoading()
          if (res.data.length > 0) {
            self.thingslist.list = self.thingslist.list.concat(res.data)
            self.thingsPage = page
            self.$apply()
          } else {
            wx.showToast({
              title: '无更多数据',
              duration: 1000
            })
          }
        })
      } else if (index === 1) {
        wx.showLoading({
          title: '加载中'
        })
        let page = this.rentPage + 1
        let category = this.filter.category
        self.getRent(label, category, page).then((res) => {
          wx.hideLoading()
          if (res.data.length > 0) {
            self.rentlist.list = self.rentlist.list.concat(res.data)
            self.rentPage = page
            self.$apply()
          } else {
            wx.showToast({
              title: '无更多数据',
              duration: 1000
            })
          }
        })
      }
    }
    components = {
      bottomtabs: BottomTabs,
      toptabsA: TopTabs,
      toptabsB: TopTabs,
      filter: Filter,
      listitem: ListItem,
      group: Group,
      myinfo: My,
      circle: Circle
    }
    data = {
      showFilter: false,
      cacheThings: null,
      thingsPage: 1,
      rentPage: 1,
      filter: {
        type: 1,
        category: [],
        address: [],
        label: 1
      },
      hotItems: ['自行车', '电脑', '数位板', 'YSL', '熨斗', '吹风机', '电动车'],
      inputState: false,
      titles: ['租品', '求租', '发布', '圈子', '我的'],
      tabIndexB: 0,
      tabIndexT: 0,
      userInfo: {},
      topTabB: {
        color: '#a9a29f',
        selectedColor: '#3e3835',
        backgroundColor: '#ffffff',
        borderStyle: 'black',
        list: [{
            text: '楼栋排行',
            selected: true
          },
          {
            text: '微信群排行',
            selected: false
          }
        ],
        position: 'top'
      },
      topTabA: {
        color: '#a9a29f',
        selectedColor: '#3e3835',
        backgroundColor: '#ffffff',
        borderStyle: 'black',
        list: [{
            text: '最新',
            selected: true
          },
          {
            text: '最近',
            selected: false
          },
          {
            text: '最贵',
            selected: false
          }
        ],
        position: 'top'
      },
      circleList: [],
      thingslist: {
        list: [],
        type: 'things'
      },
      rentlist: {
        list: [],
        type: 'rent'
      }
    }
    listFilter(item) {
      let date = new Date()
      let begintime = item.pub_time
      let title = item.title
      let descript = item.description
      let endtime = date.getTime()
      let nTime = endtime - begintime
      let day = nTime / 86400000
      let str = ''
      if (day < 1) {
        let hours = day * 24
        if (hours < 1) {
          str = Math.floor(hours * 60).toString() + '分钟前'
        } else {
          str = Math.floor(hours).toString() + '小时前'
        }
      } else {
        str = Math.floor(day).toString() + '天前'
      }
      if (descript && descript.length > DESALLOWLENGTH + 3) {
        item.description = descript.slice(0, DESALLOWLENGTH) + '...'
      }
      if (title && title.length > TITLEALLOWLENGTH + 3) {
        item.title = title.slice(0, TITLEALLOWLENGTH) + '...'
      }
      if (item.pictures && item.pictures.length > 3) {
        item.pictures = item.pictures.slice(0, 3)
      }
      item.pubtime = str
      return item
    }
    computed = {
      ifNoMargin() {
        return (this.tabIndexB == 0 || this.tabIndexB == 4)
      },
      thingsNotEmpty() {
        return this.thingslist.list.length != 0
      },
      rentNotEmpty() {
        return this.rentlist.list.length != 0
      },
      getHotItems() {
        return this.hotItems.join(' · ')
      },
      getThingsList() {
        let self = this
        let newList = this.thingslist.list.map(self.listFilter)
        return newList
      },
      getRentList() {
        let self = this
        let newList = this.rentlist.list.map(self.listFilter)
        return newList
      }
    }
    methods = {
      openFilter(e) {
        this.showFilter = true
        wx.reportAnalytics('filter', {})
        this.$apply()
      },
      appendThings(e) {
        console.log(123)
      },
      searchHandler(event) {
        let content = event.detail.value
        wx.reportAnalytics('search', {
          content: content,
        })
        wx.navigateTo({
          url: 'search?content=' + content
        })
      },
      openSearch(event) {
        this.inputState = true
        this.getHotSearch().then((res) => {
          this.hotItems = res.data
          this.$apply()
        })
      },
      closeSearch(event) {
        this.inputState = false
        this.$apply()
      },
      openInfo(event) {
        let type = event.currentTarget.dataset.type
        let id = event.currentTarget.dataset.itemid
        if (type === 'things') {
          wx.navigateTo({
            url: 'thingsinfo?id=' + id
          })
        } else {
          wx.navigateTo({
            url: 'rentinfo?id=' + id
          })
        }
      }
    }
    getHotSearch(label) {
      let token = this.$parent.globalData.code
      // console.log(token)
      return this.$parent.Request({
        url: 'search/hot',
        label: label
      }, token)
    }
    getThings(label, category = 1, page) {
      let token = this.$parent.globalData.code
      let tpage = page || this.thingsPage
      // console.log(token)
      return this.$parent.Request({
        url: 'commodity/',
        data: {
          label: label,
          category: category,
          type: 1,
          pages: tpage
        }
      }, token)
    }
    getRent(label, category = 1, page) {
      let token = this.$parent.globalData.code
      let tpage = page || this.rentPage
      return this.$parent.Request({
        url: 'commodity/',
        data: {
          label: label,
          category: category,
          type: 2,
          pages: tpage
        }
      }, token)
    }
    events = {
      'tab-changeB': (...args) => {
        let index = args[0]
        let self = this
        this.tabIndexB = index
        wx.setNavigationBarTitle({
          title: self.titles[index]
        })
        if (index === 3) {
          this.renderCircle(1)
        }
        if (index >= 3) {
          wx.hideShareMenu()
        }
        this.$apply()
      },
      'tab-changeT': (...args) => {
        let index = args[0]
        let self = this
        let type = self.tabIndexB + 1
        let label = index + 1
        if (type === 2) {
          this.tabIndexT = index
          this.reRenderList(type, label, null)
        } else if (type === 4) {
          this.renderCircle(label)
        }
        console.log(type, label)
        this.$apply()
      },
      'filter-complete': (data) => {
        console.log(data)
        this.showFilter = false
        this.filter = data
        this.renderHomeList(data)
        this.$apply()
      }
    }
    renderHomeList(data) {
      let self = this
      return this.$parent.Request({
        url: 'commodity/home',
        data: {
          type: data.type,
          category: JSON.stringify(data.category),
          address: JSON.stringify(data.address),
          pages: self.thingsPage
        }
      }).then((res) => {
        self.thingslist.list = res.data
        self.filter.type = data.type
        self.filter.address = data.address
        self.filter.category = data.category
        self.thingsPage = 1
        self.$apply()
      })
    }
    renderCircle(label) {
      let self = this
      if (label === 1) {
        wx.reportAnalytics('address_click', {})
        this.$parent.Request({
          url: 'rank/address'
        }).then((res) => {
          self.circleList = res.data
          self.$apply()
        })
      } else {
        wx.reportAnalytics('wechat_click', {})
        this.$parent.Request({
          url: 'rank/wechat'
        }).then((res) => {
          self.circleList = res.data
          self.$apply()
        })
      }
    }
    reRenderList(type, label, category, page = 1) {
      let self = this
      let token = this.$parent.globalData.code
      let obj = {
        type: type,
        label: label,
        page: page
      }
      if (category) {
        obj.category = category
      }
      this.$parent.Request({
        url: 'commodity/',
        data: obj
      }, token).then((res) => {
        let data = res.data
        if (type == 1) {
          self.thingslist.list = data
        } else {
          self.rentlist.list = data
        }
        self.$apply()
      })
    }
    onShow() {
      let self = this
      let category = this.$parent.globalData.category
      if (category) {
        let type = self.tabIndexB + 1
        let label = self.tabIndexT + 1
        switch (type) {
          case 1:
            self.reRenderList(type, label, category)
            break
          case 2:
            let newlabel = label === 3 ? 4 : index
            self.reRenderList(type, newlabel, category)
            break
          case 3:
            break
          default:
        }
      }
      console.log(this.$parent.globalData)
    }
    onLoad(options) {
      wx.showShareMenu({
        withShareTicket: true
      })
      wx.showLoading({
        title: '加载中',
        mask: true
      })
    }
    async init() {
      let self = this
      const tdata = await self.getThings(1)
      const rdata = await self.getRent(1)
      const hdata = await self.getHotSearch()
      // const rankdata = await self.getRank()
      // self.rankData = rankdata.data
      self.thingslist.list = tdata.data
      self.cacheThings = tdata.data
      self.rentlist.list = rdata.data
      self.hotItems = hdata.data
      self.$apply()
      // console.log(rankdata)
      wx.hideLoading()
    }
    onReady() {
      let self = this
      this.$parent.getUserInfo((userInfo) => {
        if (userInfo) {
          self.userInfo = userInfo.data
          self.$apply()
          self.init()
          // console.log(self.userInfo)
          // self.$broadcast('userinfo-loaded', userInfo.nickName, userInfo.avatarUrl)
        }
      }, (res) => {
        wx.hideLoading()
        wx.showToast({
          title: '服务器出错',
          image: '../images/icons/yes_no.svg',
          duration: 2000
        })
      })
    }
  }
</script>
